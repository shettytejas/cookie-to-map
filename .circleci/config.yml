version: 2.1

orbs:
  discord: antonioned/discord@0.1.0
  node: circleci/node@5.0.3

commands:
  setup:
    description: 'Set of common setup steps.'
    steps:
      - checkout
      - node/install-packages

  get_env:
    description: 'Getting the environment variables loaded into the shell when needed.'
    steps:
      - attach_workspace:
          at: '.'
      - run: cat .env >> $BASH_ENV

defaults: &defaults
  docker:
    - image: cimg/node:18.1.0

jobs:
  build:
    <<: *defaults
    steps:
      - setup

  set_env:
    <<: *defaults
    steps:
      - checkout
      - run: echo "export BUILD_VERSION=$(npm pkg get version | tr -d '\"')" >> .env
      - persist_to_workspace:
          root: './'
          path: '.env'

  lint:
    <<: *defaults
    steps:
      - setup
      - run: npm run lint

  test:
    <<: *defaults
    steps:
      - setup
      - run: npm run test
      - store_test_results:
          path: reports/mocha
      - store_artifacts:
          path: coverage

  publish:
    <<: *defaults
    steps:
      - run: echo 'TODO!'

  git_release:
    <<: *defaults
    steps:
      - run: echo 'TODO'

  alert:
    <<: *defaults
    steps:
      - discord/status:
          success_message: ':rocket: Hurray! The CI workflow for the branch **$CIRCLE_BRANCH** is a success! New Version is up!'
          failure_message: ':skull_crossbones: Bruh! The CI workflow for the branch **$CIRCLE_BRANCH** failed. Version deployment is halted!'

workflows:
  master-workflow:
    unless:
      equal: [<< pipeline.git.branch >>, 'master']
    jobs:
      - build
      - set_env:
          requires:
            - build
      - lint:
          requires:
            - set_env
      - test:
          requires:
            - set_env
      - publish:
          requires:
            - lint
            - test
      - git_release:
          requires:
            - publish
      - alert:
          requires:
            - git_release
  pr-workflow:
    unless:
      equal: [<< pipeline.git.branch >>, 'master']
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
